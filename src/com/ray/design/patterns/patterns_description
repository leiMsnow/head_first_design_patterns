strategy策略模式 - 定义了算法族, 分别封装起来,让他们之间可以互相替换,此模式让算法的变化独立于使用算法的客户。

observer观察者模式 - 在对象之间定义一对多的依赖，这样一来，当一个对象改变状态，依赖它的对象都会收到通知，并做出相应改变。

decorator装饰者模式 - 动态地将责任附加到对象上。想要扩展功能，装饰者提供有别与继承的另一种选择。

singleton单例模式 - 确保一个类只有一个实例，并提供一个全局访问点。

command命令模式 - 将“请求”封装成对象，以便使用不同的请求，队列或者日志来参数化其他对象，命令模式也支持可撤销的操作。